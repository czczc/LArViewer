#include "services_lbne.fcl"
#include "caldata_lbne.fcl"
#include "cluster_lbne.fcl"
#include "trackfindermodules.fcl"


process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco35t_hist.root" }
  Timing:       {}
  RandomNumberGenerator: {} #ART native random number generator
  # message:      @local::standard_debug
  user:         @local::lbne35t_services 	     
}

services.message.destinations.warningmsg.type: "cout"

#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {


#  calgaus:    @local::lbne35t_calgaushf
  caldata:    @local::lbne35t_calwire	    
  gaushit:    @local::lbne35t_gaushitfinder
  hit:    @local::lbne35t_gaushitfinder
  hitcheater: @local::lbne35t_hitcheater
  apacheat:   @local::standard_disambigcheat
  apahit:      @local::lbne35t_apahitfinder
  
  spacepts:   @local::standard_spacepts
  hough:      @local::standard_houghlinefinder
#  cluster:    @local::standard_clustercrawler
    fuzzy:    @local::standard_fuzzycluster
  ct:         @local::standard_cosmictracker

  }

 analyzers:
 {
  #   anatree:     @local::bo_anatree
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
# reco:   [ caldata,gaushit, apacheat, fuzzy, spacepts, ct]
  #reco:   [ caldata,gaushit, hitcheater,apahit, fuzzy, spacepts, ct]
  reco:   [ caldata, gaushit ] 

  
 #ana:  [ anatree ]
 ana:  [ ]

 stream1:  [ out1 ]

 trigger_paths: [ reco ]

 end_paths:     [ ana, stream1]  
 #end_paths:     [ stream1 ]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
    module_type: "RootOutput"
    fileName:    "single35t_reco.root" #default file name, can override from command line with -o or --output
 }
}

##physics.producers.cluster.HitsModuleLabel: "gaushit"
physics.producers.fuzzy.HitsModuleLabel: "apahit"
physics.producers.spacepts.HitModuleLabel: "apahit"
physics.producers.spacepts.ClusterModuleLabel: "fuzzy"
physics.producers.ct.ClusterModuleLabel: "fuzzy"
#physics.analyzers.anatree.TrackModuleLabel: "ct"
#physics.analyzers.anatree.HitsModuleLabel: "apahit"

#############
#######
######    HitsModuleLabel: apacheat
######
################
